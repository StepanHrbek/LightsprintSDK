namespace rr
{

/**

\file doc.news
\brief Documentation only.

\page main_news What's new


\section news41 ------------------------------------ 2007.12.xx -------------------------------------

NEWS

- all scene adapters (Collada/3DS/Quake3) are OpenGL/Direct3D independent
- all skyboxes are realtime renderable (now including createSky())

CHANGES

- MAJOR CLEANUP, API made simpler, cleaner, reduced by 10%
- RRBuffer replaces all RRIlluminationXxx classes
  - rename RRIlluminationVertexBuffer to RRBuffer
  - rename RRIlluminationPixelBuffer to RRBuffer
  - rename RRIlluminationEnvironmentMap to RRBuffer
  - fix function calls where names or parameters changed due to unification
- updateLightmap() and updateLightmaps() support all types of buffers,
  updateVertexBuffer() and updateVertexBuffers() removed
  - rename updateVertexBuffer() to updateLightmap()
  - rename updateVertexBuffers() to updateLightmaps()
- removed RRColor* abstractions
  - rename RRColor to RRVec3
  - rename RRColorRGBF to RRVec3
  - rename RRColorRGBAF to RRVec4
  - rename RRColorRGBA8 to unsigned
- RRObjectIllumination::getLayer() returns buffer instead of structure with two buffers
  - change getLayer(n)->vertexBuffer to getLayer(n)
  - change getLayer(n)->pixelBuffer to getLayer(n)
  - make sure you don't save both vertex and pixel buffer to single layer,
    use only one of them or use different layers
- removed newVertexBuffer(), newPixelBuffer(), createMissingBuffers
  - delete third parameter from updateLightmaps()
  - if it was true, create buffers manually (example: see getLayer(...) = ... in samples)
  - delete your implementation (if any) of newVertexBuffer(), newPixelBuffer()
- UpdateParameters::measure removed
  - delete lines where you set it
- optional lightmap filtering parameters moved from pixel buffer constructor to updateLightmaps()
- removed realtime update of lightmaps

\section news40 ------------------------------------ 2007.12.06 -------------------------------------

NEWS

- sceneViewer(), debugging console, single function viewer of scene with movable lights, realtime global illumination
  \n RRDynamicSolver is usually black box. This viewer shows what's inside solver.
- realtime directional lights
- initial Unreal Engine 3 integration, see samples\ImportUE3\instructions.txt

CHANGES

- RRDynamicSolver can be used without subclassing (for offline), all functions implemented
- RRObject::getTriangleMaterial() has one new parameter
  \n It is possible to disable direct shadow casting for selected triangle, light and receiver.

\section news39 ------------------------------------ 2007.11.27 -------------------------------------

NEWS

- added RRLight::castShadows, may be disabled to copy behaviour of other engines
- added RRLight::customData, may point to light in third party engine
- sample RealtimeLights supports custom Collada scenes out of the box (use drag&drop or commandline argument)
- added RRIlluminationPixelBuffer::lockRGBF() for reading lightmap pixels in native floating point precision
  (temporarily, will be replaced by more general buffers soon)

CHANGES

- RRObject::getTriangleMaterial() has one new parameter
  \n It is possible to have lights that interact with selected objects (or triangles) only.
  Suitable for testing UE3's lighting channels.
- removed RRStaticSolver and sample HelloStaticSolver
- removed RRObjectWithIllumination
  and RRDynamicSolver::getMultiObjectPhysicalWithIllumination()
  and RRObject::createObjectWithIllumination()

\section news38 ------------------------------------ 2007.11.17 -------------------------------------

NEWS

- Realtime renderer unified with offline, both use lights set by RRDynamicSolver::setLights().
  \n Majority of offline features now suppoted in realtime.
- new sample RealtimeLights shows multiple movable lights with realtime GI, without precalculations

CHANGES

- New rr_gl::RealtimeLight is RRLight for realtime rendering. Made out of old rr_gl::AreaLight.
- RRLight::SPOT added to differentiate between POINT and SPOT lights
- internal RRLight attributes made public so realtime renderer can read them

\section news37 ------------------------------------ 2007.11.08 -------------------------------------

NEWS

- sample RealtimeRadiosity shows properly lit animated object
  (was not demonstrated before)
- wrapping in lightmap build is optional

FIXES

- proper smoothing in lightmaps with large triangles

\section news36 ------------------------------------ 2007.10.31 -------------------------------------

NEWS

- GeForce 5xxx support added, other compatibility improvements
- RRIlluminationEnvironmentMap::createSky()
  \n creates environment with two uniform colors for upper and lower hemisphere
- rr_gl::RRDynamicSolverGL works in higher precision, may be changed in constructor

CHANGES

- rr::RRMaterial::specularTransmittance extended from scalar value to rgb
- removed SmoothingParameters::smoothMode
- removed RRColorI8

\section news35 ------------------------------------ 2007.10.14 -------------------------------------

NEWS

- extended RRObjectIllumination, reflection maps for dynamic objects added
- RRDynamicSolver::updateEnvironmentMapCache() added for better parallelization
- RRDynamicSolver::verify(),
  \n tests data in solver and reports problems, analogous to RRMesh::verify()
- faster realtime lighting, higher quality penumbra shadows
- RRIlluminationVertexBuffer::lockWriting(), optional lock for writing

CHANGES

- renamed RRDynamicSolver::setObjects() -> RRDynamicSolver::setStaticObjects()
- modified RRDynamicSolver::calculate(), takes parameters from
  \n RRDynamicSolver::CalculateParams, makes realtime lighting quality adjustable
- renamed and modified RRDynamicSolver::updateEnvironmentMaps() to RRDynamicSolver::updateEnvironmentMap(),
  \n parameters moved to RRObjectIllumination
- renamed RRIlluminationVertexBuffer::lock() -> RRIlluminationVertexBuffer::lockReading()

\section news34 ------------------------------------ 2007.9.23 -------------------------------------

CHANGES

- RRDynamicSolver::detectDirectIllumination() returns pointer to array of irradiances,
  \n rather than directly pushing irradiances into RRObject.
- RRDynamicSolver::setDirectIlluminationBoost() replaces RRDynamicSolverGL::boostDetectedDirectIllumination
- RRReportType CONT removed

\section news33 ------------------------------------ 2007.9.20 -------------------------------------

NEWS

- Fireball: faster, higher quality, smaller, realtime solver, recommended for games.
  \n New functions:
  \n   RRDynamicSolver::buildFireball() - build from scratch
  \n   RRDynamicSolver::loadFireball() - load from disk
  \n Demonstrated in:
  \n   RealtimeRadiosity sample
- RRVector::clear(), similar to std::vector::clear()

*/

};

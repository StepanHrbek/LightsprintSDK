namespace rr
{

/**

\file doc.news
\brief Documentation only.

\page main_news What's new

\section news55 ------------------------------------ 2008.4.xx -------------------------------------

CHANGES

- more detailed parameters in RRDynamicSolver::reportDirectIlluminationChange()
- RRDynamicSolver::detectDirectIllumination() changed to RRDynamicSolver::setDirectIllumination()
- classes that don't support copying now throw compile error on attempt to copy
- collider is slightly faster and more robust
- more RRMesh and RRCollider functions and instances are const (to emphasize fact that they never change)

\section news54 ------------------------------------ 2008.4.14 -------------------------------------

NEWS

- supports scenes with up to 4 billion meshes and 4 billion triangles/vertices per mesh (was 8k and 512k)
- supports spot exponent (in RRLight::createSpotPoly())
- import of .obj files (geometry only, no materials)
- RRDynamicSolver::setStaticObjects()'s new parameter cacheLocation (you can disable collider cache)

CHANGES

- RRMesh::MultiMeshPreImportNumber renamed to RRMesh::PreImportNumber
- all PreImport numbers changed from unsigned to RRMesh::PreImportNumber
  \n so compiler prevents you from accidentally using PreImport number for PostImport and vice versa
  \n If you implemented following functions from RRMesh interface, change your declarations to match
     new interface:
  - RRMesh::getPreImportVertex()
  - RRMesh::getPostImportVertex()
  - RRMesh::getPreImportTriangle()
  - RRMesh::getPostImportTriangle()
- moved RRDynamicSolver::SmoothingParams::intersectTechnique to RRDynamicSolver::setStaticObjects() parameter
  \n (default value was preserved)
- removed RRMesh::createCopy()

\section news53 ------------------------------------ 2008.4.6 -------------------------------------

NEWS

- native 64bit support for all libraries and samples

CHANGES

- removed RRObject::getTriangleIllumination

\section news52 ------------------------------------ 2008.3.26 -------------------------------------

NEWS

- 5x faster lightmap build in scenes with hundreds of lights

\section news51 ------------------------------------ 2008.3.21 -------------------------------------

NEWS

- global illumination is computed for all LODs at the same time
  \n implement RRObject::getTriangleLod() to enable calculation with LODs

CHANGES

- RRDynamicSolver::updateEnvironmentMap() preserves size and format of your maps,
  \n RRObjectIllumination::diffuseEnvMapSize and specularEnvMapSize no longer needed, deleted

\section news50 ------------------------------------ 2008.3.11 -------------------------------------

NEWS

- directional lightmaps support new format
  \n for 3 or 4 normal directions, 3 or 4 lightmaps are generated per object
  \n compatible with Unreal Engine 3
  \n see additional parameter in RRDynamicSolver::updateLightmap()
     and RRDynamicSolver::updateLightmaps()
- 1.2-10x faster lightmap build
- alpha in lightmaps with alpha channel is set to 0/1 for unused/used texels or vertices
- RRMesh::createAccelerated()
  \n creates faster mesh, duplicating most frequently accessed data
  \n new parameter in RRObject::createMultiObject() enables it
- RRDynamicSolver::UpdateParameters::qualityFactorRadiosity
  \n finer quality control

CHANGES

- RRMesh::TriangleNormals newly contains also tangents
- RRBuffer::setElement accepts RRVec4 rather than RRVec3
- newer FCollada 3.05B is used in samples accessing Collada files

\section news49 ------------------------------------ 2008.2.20 -------------------------------------

NEWS

- RRDynamicSolver::aborting
  \n lets you abort running calculation
- rr_gl::updateLightmapsWithDialog()
  \n enhanced RRDynamicSolver::updateLightmaps(), with abort button, adjustable quality, log, scene viewer

\section news48 ------------------------------------ 2008.2.17 -------------------------------------

CHANGES

- LightsprintCore doesn't depend on FreeImage
  \n To load textures using FreeImage, include samples/Import/ImportFreeImage.cpp in your project.

\section news47 ------------------------------------ 2008.2.7 -------------------------------------

NEWS

- non-fireball solvers use 2x less memory
- non-fireball solvers initialize faster (1000x faster in scene with 6000 meshes)

\section news46 ------------------------------------ 2008.1.28 -------------------------------------

NEWS

- lightmap building is 10x faster

*/

};

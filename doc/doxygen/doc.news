namespace rr
{

/**

\file doc.news
\brief Documentation only.

\page main_news What's new

\section news38 ------------------------------------ 2007.11.12 -------------------------------------

NEWS

- new sample RealtimeLights shows multiple lights 
  with realtime global illumination in Collada scene

CHANGES

- RRLight::SPOT added to differentiate between POINT and SPOT lights
- internal RRLight attributes made public so realtime renderer can read them

\section news37 ------------------------------------ 2007.11.08 -------------------------------------

NEWS

- sample RealtimeRadiosity shows properly lit animated object
  (was not demonstrated before)
- wrapping in lightmap build is optional

FIXES

- proper smoothing in lightmaps with large triangles

\section news36 ------------------------------------ 2007.10.31 -------------------------------------

NEWS

- GeForce 5xxx support added, other compatibility improvements
- RRIlluminationEnvironmentMap::createSky()
  \n creates environment with two uniform colors for upper and lower hemisphere
- rr_gl::RRDynamicSolverGL works in higher precision, may be changed in constructor

CHANGES

- rr::RRMaterial::specularTransmittance extended from scalar value to rgb
- removed SmoothingParameters::smoothMode
- removed RRColorI8

\section news35 ------------------------------------ 2007.10.14 -------------------------------------

NEWS

- extended RRObjectIllumination, reflection maps for dynamic objects added
- RRDynamicSolver::updateEnvironmentMapCache() added for better parallelization
- RRDynamicSolver::verify(),
  \n tests data in solver and reports problems, analogous to RRMesh::verify()
- faster realtime lighting, higher quality penumbra shadows
- RRIlluminationVertexBuffer::lockWriting(), optional lock for writing

CHANGES

- renamed RRDynamicSolver::setObjects() -> RRDynamicSolver::setStaticObjects()
- modified RRDynamicSolver::calculate(), takes parameters from
  \n RRDynamicSolver::CalculateParams, makes realtime lighting quality adjustable
- renamed and modified RRDynamicSolver::updateEnvironmentMaps() to RRDynamicSolver::updateEnvironmentMap(),
  \n parameters moved to RRObjectIllumination
- renamed RRIlluminationVertexBuffer::lock() -> RRIlluminationVertexBuffer::lockReading()

\section news34 ------------------------------------ 2007.9.23 -------------------------------------

CHANGES

- RRDynamicSolver::detectDirectIllumination() returns pointer to array of irradiances,
  \n rather than directly pushing irradiances into RRObject.
- RRDynamicSolver::setDirectIlluminationBoost() replaces RRDynamicSolverGL::boostDetectedDirectIllumination
- RRReportType CONT removed

\section news33 ------------------------------------ 2007.9.20 -------------------------------------

NEWS

- Fireball: faster, higher quality, smaller, realtime solver, recommended for games.
  \n New functions:
  \n   RRDynamicSolver::buildFireball() - build from scratch
  \n   RRDynamicSolver::loadFireball() - load from disk
  \n Demonstrated in:
  \n   RealtimeRadiosity sample
- RRVector::clear(), similar to std::vector::clear()

\section news32 ------------------------------------ 2007.9.11 -------------------------------------

NEWS

- RRLight::createPointLightRadiusExp()
- RRLight::createSpotLightRadiusExp()
- RRLight::createPointLightPoly()
- RRLight::createSpotLightPoly()
  \n new light variants with non-physical distance attenuations

\section news31 ------------------------------------ 2007.8.31 -------------------------------------

NEWS

- sample MultiMeshCollider shows ray test against static scene with multiple meshes
- RRMesh::createTransformed() creates copy of mesh, transformed by matrix
- RRMesh::createVertexBufferRuler() creates mesh that look identical,
  \n but its vertex numbering is directive for vertex buffers created by RRDynamicSolver
  \n (vertex buffers otherwise use original vertex numbering valid before filters and optimizers
  were applied to mesh)


\section news30 ------------------------------------ 2007.8.24 -------------------------------------

CHANGES

- removed Water sample

\section news29 ------------------------------------ 2007.8.21 -------------------------------------

NEWS

- Support for per-pixel materials for higher quality lighting.
  \n Suitable for diffuse/specular/transparency textures, even procedural ones.
  \n Specified by RRObject::getPointMaterial() and RRSideBits::pointDetails.
  \n Automatically used by solvers.
- proper reflection and refraction, creates caustics etc (rewritten final gather pass)
- antialiased shadows (were aliased in scenes lit by RRLight)

CHANGES

- features gone with old final gather, to be removed or reworked
  \n RRDynamicSolver::UpdateParameters::insideObjectsTreshold
  \n RRDynamicSolver::UpdateParameters::rugDistance
  \n RRSideBits::legal
- stitchDistance renamed to vertexWeldDistance
- default SmoothingParameters disable minFeatureSize and limit vertex weld to identical vertices

*/

};

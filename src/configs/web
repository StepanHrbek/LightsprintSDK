CONFIG = web
OS = web
APP_EXTENSION = .html

include $(CFG_DIR)/linux.static

CPP_FLAGS += -O2

# OpenMP not supported by emscripten
#CPP_FLAGS += -fopenmp

CPP_FLAGS += -DNDEBUG

# workaround for emscripten in 2024-04 not understanding std::execution::par_unseq
CPP_FLAGS += -fexperimental-library

# emscripten translates our code to webgl, which is similar to GL ES
CPP_FLAGS += -DRR_GL_ES2

C_EXTRA_FLAGS = -std=gnu99 # for .c files, override -std=c++17 from CPP_FLAGS 
CPP_FLAGS += -std=c++17 # filesystem

CORE_DEPS =
CORE_LIBS = $(CORE_DEPS) \
	../../$(LIB_DIR)/$(CONFIG)/libLightsprintCore.$(LIB_EXT)

GL_DEPS = \
	-lGL \
	-lGLEW
GL_LIBS = $(GL_DEPS) \
	../../$(LIB_DIR)/$(CONFIG)/libLightsprintGL.$(LIB_EXT)

ED_DEPS = \
	-lGLU \
	`wx-config --libs aui,gl,propgrid`
ED_LIBS = $(ED_DEPS) \
	../../$(LIB_DIR)/$(CONFIG)/libLightsprintEd.$(LIB_EXT)

IO_DEPS = --use-port=sdl2_image:formats=png,jpg --use-preload-plugins
IO_LIBS = $(IO_DEPS) \
	../../$(LIB_DIR)/$(CONFIG)/libLightsprintIO.$(LIB_EXT)

GLFW_LIB = --use-port=contrib.glfw3

LINK_FLAGS += -sMIN_WEBGL_VERSION=2
LINK_FLAGS += -sMAX_WEBGL_VERSION=2
# convert each [file] in DATA_FILES list to --preload-file ../../data/[file]@data/[file]
#  necessary, because virtual filesystem we build is rooted in current directory, it fails if file is outside
#  luckily, when c++ code looks for "../../data/file", virtual filesystem finds it in "data/file"
LINK_FLAGS += $(subst ::, ,$(join $(patsubst %,--preload-file::../../data/%@data/,$(DATA_FILES)),$(DATA_FILES)))

CXX += --use-port=boost_headers 

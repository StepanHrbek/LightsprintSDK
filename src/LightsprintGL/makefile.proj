# include platform-specific configuration

CFG_DIR = ../configs
-include $(CFG_DIR)/current

ifdef CONFIG
include $(CFG_DIR)/$(CONFIG)
endif

# general project settings

PROJECT = LightsprintGL

ifdef STATIC
CFG_TYPE = lib
TARGET = ../../lib/$(CONFIG)/lib$(PROJECT).a
else
CFG_TYPE = dll
TARGET = ../../bin/$(CONFIG)/lib$(PROJECT).so
endif

OBJ_DIR = ../../tmp/$(PROJECT)/$(CONFIG)

# project-dependent compiler/preprocessor flags

CPP_FLAGS += -DRR_GL_BUILD
CPP_FLAGS += -DSUPPORT_OFFLINE
CPP_FLAGS += -DSUPPORT_FIREBALL
CPP_FLAGS += -DSUPPORT_ARCHITECT
CPP_FLAGS += -DSUPPORT_LIGHTFIELD
ifeq ($(OS),OSX)
    CPP_FLAGS += -DSUPPORT_SCENEVIEWER
endif

# source files

SOURCES = \
Bloom.cpp \
Camera.cpp \
DOF.cpp \
FPS.cpp \
LensFlare.cpp \
MultiPass.cpp \
Program.cpp \
RealtimeLight.cpp \
RendererOfMesh.cpp \
RendererOfScene.cpp \
RRDynamicSolverGL.cpp \
Shader.cpp \
Texture.cpp \
TextureRenderer.cpp \
ToneMapping.cpp \
UberProgram.cpp \
UberProgramSetup.cpp \
Workaround.cpp \
SceneViewer/SVStub.cpp

ifeq ($(OS),OSX)
SOURCES += \
SceneViewer/SVApp.cpp \
SceneViewer/SVCanvas.cpp \
SceneViewer/SVCustomProperties.cpp \
SceneViewer/SVDialogs.cpp \
SceneViewer/SVEntityIcons.cpp \
SceneViewer/SVFrame.cpp \
SceneViewer/SVGIProperties.cpp \
SceneViewer/SVLightProperties.cpp \
SceneViewer/SVLightmapViewer.cpp \
SceneViewer/SVLog.cpp \
SceneViewer/SVMaterialProperties.cpp \
SceneViewer/SVObjectProperties.cpp \
SceneViewer/SVRayLog.cpp \
SceneViewer/SVSaveLoad.cpp \
SceneViewer/SVSceneProperties.cpp \
SceneViewer/SVSceneTree.cpp \
SceneViewer/SVUserProperties.cpp
endif

# libraries

LIBS += $(CORE_LIBS) $(GL_DEPS)

# include directories

INC_DIRS = .
INC_DIRS += ../../include

# library directories

LIB_DIRS = .

# include the core part of the makefile

include $(CFG_DIR)/../makefile.core

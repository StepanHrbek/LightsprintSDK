// Realtime Radiosity Viewer ubershader
//
// options controlled by program:
//  #define SHADOW_MAPS 6
//  #define SHADOW_SAMPLES 4
//  #define DIRECT_LIGHT
//  #define INDIRECT_LIGHT
//  #define DIFFUSE_MAP
//  #define FORCE_2D_POSITION

varying vec4 projCoord[SHADOW_MAPS];

#ifdef DIRECT_LIGHT
uniform vec3 lLightPos;
#endif

#ifdef INDIRECT_LIGHT
varying vec4 ambientIrradiance;
#endif

#ifdef DIFFUSE_MAP
varying vec2 diffuseCoord;
#endif

void main()
{
#ifdef DIRECT_LIGHT
  // direct light
  vec3 lLightDir = normalize(lLightPos - gl_Vertex.xyz);
  gl_FrontColor = vec4(dot(lLightDir, gl_Normal));
#endif

#ifdef INDIRECT_LIGHT
  // indirect light
  ambientIrradiance = gl_Color;
#endif

  //for(int i=0;i<SHADOW_MAPS;i++)
  //  projCoord[i] = gl_TextureMatrix[i] * gl_Vertex;
  // ATI is reported to fail on previous cycle, unrolled version is ok:
#if SHADOW_MAPS>0
  projCoord[0] = gl_TextureMatrix[0] * gl_Vertex;
#endif
#if SHADOW_MAPS>1
  projCoord[1] = gl_TextureMatrix[1] * gl_Vertex;
#endif
#if SHADOW_MAPS>2
  projCoord[2] = gl_TextureMatrix[2] * gl_Vertex;
#endif
#if SHADOW_MAPS>3
  projCoord[3] = gl_TextureMatrix[3] * gl_Vertex;
#endif
#if SHADOW_MAPS>4
  projCoord[4] = gl_TextureMatrix[4] * gl_Vertex;
#endif
#if SHADOW_MAPS>5
  projCoord[5] = gl_TextureMatrix[5] * gl_Vertex;
#endif
#if SHADOW_MAPS>6
  projCoord[6] = gl_TextureMatrix[6] * gl_Vertex;
#endif
#if SHADOW_MAPS>7
  projCoord[7] = gl_TextureMatrix[7] * gl_Vertex;
#endif
#if SHADOW_MAPS>8
  projCoord[8] = gl_TextureMatrix[8] * gl_Vertex;
#endif
#if SHADOW_MAPS>9
  projCoord[9] = gl_TextureMatrix[9] * gl_Vertex;
#endif

#ifdef DIFFUSE_MAP
  diffuseCoord = gl_MultiTexCoord0.xy;
#endif
  
#ifdef FORCE_2D_POSITION
  gl_Position = vec4(gl_MultiTexCoord7.x,gl_MultiTexCoord7.y,0.5,1);
#else
  gl_Position = ftransform();
#endif
}

# (../ to xx/ replacement in tmp paths exists only because of RL project which contains cpp files from ../LightsprintEd, their .o files in ../ would be shared between debug and release, and clean would not delete them. changing ../ to xx/ solves both)
OBJECTS = $(addprefix $(OBJ_DIR)/, $(addsuffix .o, $(basename $(patsubst ../%,xx/%,$(SOURCES)))))

# specify include and library directories

CPP_FLAGS += $(addprefix -I, $(INC_DIRS))
LINK_FLAGS += $(addprefix -L, $(LIB_DIRS))

# build executable

ifeq ($(CFG_TYPE), exe)
#warning: when using static lib, next line does not request .exe rebuild after lib change
#         adding $(LIBS) is too broad, we need subset of $(LIBS), only Lightsprint ones
$(TARGET):: $(CFG_DIR)/current $(OBJECTS)
	@mkdir -p $(dir $@)
	$(CXX) -o $@ $(LINK_FLAGS) $(OBJECTS) $(LIBS)
endif

# build static library

ifeq ($(CFG_TYPE), lib)
$(TARGET):: $(CFG_DIR)/current $(OBJECTS)
	@mkdir -p $(dir $@)
	$(AR) rc $@ $(OBJECTS)
	@ranlib $@
endif

# build dynamically linked library

ifeq ($(CFG_TYPE), dll)
CPP_FLAGS += -fpic
$(TARGET):: $(CFG_DIR)/current $(OBJECTS)
	@mkdir -p $(dir $@)
	$(CXX) -o $@ -shared $(LINK_FLAGS) $(OBJECTS) $(LIBS)
endif

# include dependencies

-include $(OBJECTS:%.o=%.d)

# compile

$(OBJ_DIR)/xx/%.o: ../%.cpp
	@mkdir -p $(dir $@)
	$(CXX) -o $@ -c $< $(CPP_FLAGS) -MD
	@sed 's|^.*:||;s| *\\$$||;s|$$|:|' < $(OBJ_DIR)/xx/$*.d >> $(OBJ_DIR)/xx/$*.d

$(OBJ_DIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CXX) -o $@ -c $< $(CPP_FLAGS) -MD
	@sed 's|^.*:||;s| *\\$$||;s|$$|:|' < $(OBJ_DIR)/$*.d >> $(OBJ_DIR)/$*.d

$(OBJ_DIR)/%.o: %.cc
	@mkdir -p $(dir $@)
	$(CXX) -o $@ -c $< $(CPP_FLAGS) -MD
	@sed 's|^.*:||;s| *\\$$||;s|$$|:|' < $(OBJ_DIR)/$*.d >> $(OBJ_DIR)/$*.d

$(OBJ_DIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) -o $@ -c $< $(CPP_FLAGS) $(C_EXTRA_FLAGS) -MD
	@sed 's|^.*:||;s| *\\$$||;s|$$|:|' < $(OBJ_DIR)/$*.d >> $(OBJ_DIR)/$*.d

# clean object and dependency files

clean:
	@rm -f `find $(OBJ_DIR) -type f`
	@rm -rf $(OBJ_DIR)

run:
	@make
	@( cd "$(dir $(TARGET))"; $(TARGET) )

# handle platforms and configurations

$(CFG_DIR)/current:
	@if [ ! -f $(CFG_DIR)/current ] ; then \
		echo "-----------------------------------------------------------------------------"; \
		echo "Please use \"make <config>\" first. Select one of the following configurations:"; \
		echo "-----------------------------------------------------------------------------"; \
		ls -1 $(CFG_DIR); \
		echo "-----------------------------------------------------------------------------"; \
		echo "You may ignore the following error messages."; \
		echo "-----------------------------------------------------------------------------"; \
		exit 1; \
	fi

ps3-linux ps3-linux-debug \
linux32 linux32-debug \
linux32-static linux32-static-debug \
linux64 linux64-debug \
linux64-static linux64-static-debug \
pc-mingw32 pc-mingw32-debug \
pc-osx pc-osx-debug:
	@echo "CONFIG = $@" > $(CFG_DIR)/current
	@echo Switched to configuration \"$@\". From now on you may use simple \"make\".
	@make
